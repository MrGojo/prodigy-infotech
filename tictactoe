<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tic-Tac-Toe</title>
    <style>
    body {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    background-color: #fff8b0; /* Lighter shade of yellow */
    font-family: Arial, sans-serif;
    margin: 0;
}

.game-container {
    text-align: center;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    background-color: #ffeb3b; /* Darker shade of yellow */
}

.game-board {
    display: grid;
    grid-template-columns: repeat(3, 100px);
    gap: 5px;
    margin: 20px auto;
}

.cell {
    width: 100px;
    height: 100px;
    background-color: #ffeb3b; /* Darker shade of yellow */
    border: 2px solid #fbc02d;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 2em;
    cursor: pointer;
    transition: background-color 0.3s;
}

.cell:hover {
    background-color: #fff9c4;
}

.x {
    color: red; /* Red for X */
}

.o {
    color: black; /* Black for O */
}

h1, h2 {
    color: #f57f17; /* Similar color coordination */
}

button {
    padding: 10px 20px;
    font-size: 16px;
    background-color: #ffca28;
    color: #f57f17;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s;
}

button:hover {
    background-color: #ffc107;
}

    </style>
]
</head>
<body>
    <div class="game-container">
        <h1>Tic-Tac-Toe</h1>
        <div class="game-board" id="board">
            <div class="cell" data-cell></div>
            <div class="cell" data-cell></div>
            <div class="cell" data-cell></div>
            <div class="cell" data-cell></div>
            <div class="cell" data-cell></div>
            <div class="cell" data-cell></div>
            <div class="cell" data-cell></div>
            <div class="cell" data-cell></div>
            <div class="cell" data-cell></div>
        </div>
        <h2 id="status"></h2>
        <button id="restartButton">Restart</button>
    </div>
    <script>
        const cells = document.querySelectorAll('[data-cell]');
const board = document.getElementById('board');
const statusText = document.getElementById('status');
const restartButton = document.getElementById('restartButton');
let isXNext = true;

const winningCombinations = [
    [0, 1, 2],
    [3, 4, 5],
    [6, 7, 8],
    [0, 3, 6],
    [1, 4, 7],
    [2, 5, 8],
    [0, 4, 8],
    [2, 4, 6]
];

const startGame = () => {
    isXNext = true;
    cells.forEach(cell => {
        cell.textContent = '';
        cell.classList.remove('x', 'o');
        cell.addEventListener('click', handleClick, { once: true });
    });
    statusText.textContent = `Player X's turn`;
};

const handleClick = (e) => {
    const cell = e.target;
    const currentClass = isXNext ? 'x' : 'o';
    placeMark(cell, currentClass);
    if (checkWin(currentClass)) {
        endGame(false);
    } else if (isDraw()) {
        endGame(true);
    } else {
        swapTurns();
    }
};

const placeMark = (cell, currentClass) => {
    cell.textContent = currentClass.toUpperCase();
    cell.classList.add(currentClass);
};


const swapTurns = () => {
    isXNext = !isXNext;
    statusText.textContent = `Player ${isXNext ? 'X' : 'O'}'s turn`;
};

const checkWin = (currentClass) => {
    return winningCombinations.some(combination => {
        return combination.every(index => {
            return cells[index].classList.contains(currentClass);
        });
    });
};

const isDraw = () => {
    return [...cells].every(cell => {
        return cell.classList.contains('x') || cell.classList.contains('o');
    });
};

const endGame = (draw) => {
    if (draw) {
        statusText.textContent = 'Draw!';
    } else {
        statusText.textContent = `Player ${isXNext ? 'X' : 'O'} wins!`;
    }
    cells.forEach(cell => {
        cell.removeEventListener('click', handleClick);
    });
};

restartButton.addEventListener('click', startGame);

startGame();

    </script>
</body>
</html>
